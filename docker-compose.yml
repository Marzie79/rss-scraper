version: '3'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - mongo
      - redis
      - rabbitmq
    env_file:
      - ./.env
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  postgres:
    image: postgres:latest
    container_name: postgres_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
    - pgdata:/var/lib/postgresql/data

  mongo:
    image: mongo:latest
    container_name: mongo_db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
    - mongodata:/var/lib/mongodb/data

  redis:
    image: redis:latest
    container_name: redis_server
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}

  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq_server
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${BROKER_USER}
      - RABBITMQ_DEFAULT_PASS=${BROKER_PASSWORD}
    volumes:
    - rabbitdata:/var/lib/rabbitmq/data

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    depends_on:
      - web
    command: celery -A rss_scraper worker -c 6 -l info
    environment:
      - DJANGO_SETTINGS_MODULE=rss_scraper.settings.base

volumes:
  pgdata:
  mongodata:
  rabbitdata:
